---
- name: Ensure jailed user exists.
  user:
    name: "{{ item.name }}"
    groups: "{{ item.groups | default(omit) }}"
    append: yes
    shell: "{{ item.shell | default(omit) }}"
    home: "{{ item.homedir | default(omit) }}"
    createhome: "{{ item.createhome | default(omit) }}"
  register: user_task

- name: Ensure jailed user has a homedir inside the jail (if configured).
  file:
    path: "{{ ssh_chroot_jail_path }}{{ item.homedir }}"
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
  when: item.homedir is defined

- name: Ensure account skeleton files are copied into jailed user's home.
  become: yes
  become_user: "{{ item.name }}"
  copy:
    src: "/etc/skel/"
    dest: "{{ ssh_chroot_jail_path }}{{ item.homedir }}"
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    remote_src: yes
  when:
    - item.homedir is defined
    - user_task.changed

- name: Add jail user to jail group
  user:
    name: "{{ item.name }}"
    groups: "{{ ssh_chroot_jail_group_name }}"
    append: yes
  when:
    - user_task.changed

- name: Ensures .ssh directory exists
  file:
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: 0700
    path: "{{ ssh_chroot_jail_path }}{{ item.homedir }}"
    state: directory
  when:
    - item.ssh_key is defined

- name: Copy ssh_key (if set)
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ lookup('file', item.ssh_key ) }}"
    path: "{{ ssh_chroot_jail_path }}{{ item.homedir }}/.ssh/authorized_keys"
  when:
    - item.ssh_key is defined
